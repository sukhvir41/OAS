/*
 * This file is generated by jOOQ.
 */
package jooq.entities.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.entities.Indexes;
import jooq.entities.Keys;
import jooq.entities.Public;
import jooq.entities.tables.records.ClassTeacherClassRoomLinkRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClassTeacherClassRoomLink extends TableImpl<ClassTeacherClassRoomLinkRecord> {

    private static final long serialVersionUID = -1092524679;

    /**
     * The reference instance of <code>public.class_teacher_class_room_link</code>
     */
    public static final ClassTeacherClassRoomLink CLASS_TEACHER_CLASS_ROOM_LINK = new ClassTeacherClassRoomLink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClassTeacherClassRoomLinkRecord> getRecordType() {
        return ClassTeacherClassRoomLinkRecord.class;
    }

    /**
     * The column <code>public.class_teacher_class_room_link.class_room_fid</code>.
     */
    public final TableField<ClassTeacherClassRoomLinkRecord, Long> CLASS_ROOM_FID = createField("class_room_fid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.class_teacher_class_room_link.class_teacher_fid</code>.
     */
    public final TableField<ClassTeacherClassRoomLinkRecord, UUID> CLASS_TEACHER_FID = createField("class_teacher_fid", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * Create a <code>public.class_teacher_class_room_link</code> table reference
     */
    public ClassTeacherClassRoomLink() {
        this(DSL.name("class_teacher_class_room_link"), null);
    }

    /**
     * Create an aliased <code>public.class_teacher_class_room_link</code> table reference
     */
    public ClassTeacherClassRoomLink(String alias) {
        this(DSL.name(alias), CLASS_TEACHER_CLASS_ROOM_LINK);
    }

    /**
     * Create an aliased <code>public.class_teacher_class_room_link</code> table reference
     */
    public ClassTeacherClassRoomLink(Name alias) {
        this(alias, CLASS_TEACHER_CLASS_ROOM_LINK);
    }

    private ClassTeacherClassRoomLink(Name alias, Table<ClassTeacherClassRoomLinkRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClassTeacherClassRoomLink(Name alias, Table<ClassTeacherClassRoomLinkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ClassTeacherClassRoomLink(Table<O> child, ForeignKey<O, ClassTeacherClassRoomLinkRecord> key) {
        super(child, key, CLASS_TEACHER_CLASS_ROOM_LINK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLASS_TEACHER_CLASS_ROOM_LINK_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClassTeacherClassRoomLinkRecord> getPrimaryKey() {
        return Keys.CLASS_TEACHER_CLASS_ROOM_LINK_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClassTeacherClassRoomLinkRecord>> getKeys() {
        return Arrays.<UniqueKey<ClassTeacherClassRoomLinkRecord>>asList(Keys.CLASS_TEACHER_CLASS_ROOM_LINK_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ClassTeacherClassRoomLinkRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ClassTeacherClassRoomLinkRecord, ?>>asList(Keys.CLASS_TEACHER_CLASS_ROOM_LINK__FKRU9WJA4OMJPPTDDT9AUGUICFH, Keys.CLASS_TEACHER_CLASS_ROOM_LINK__FKGEXE1EQJ2QGG9OT3MMIB20YWF);
    }

    public ClassRoom classRoom() {
        return new ClassRoom(this, Keys.CLASS_TEACHER_CLASS_ROOM_LINK__FKRU9WJA4OMJPPTDDT9AUGUICFH);
    }

    public Teacher teacher() {
        return new Teacher(this, Keys.CLASS_TEACHER_CLASS_ROOM_LINK__FKGEXE1EQJ2QGG9OT3MMIB20YWF);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClassTeacherClassRoomLink as(String alias) {
        return new ClassTeacherClassRoomLink(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClassTeacherClassRoomLink as(Name alias) {
        return new ClassTeacherClassRoomLink(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClassTeacherClassRoomLink rename(String name) {
        return new ClassTeacherClassRoomLink(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClassTeacherClassRoomLink rename(Name name) {
        return new ClassTeacherClassRoomLink(name, null);
    }
}
