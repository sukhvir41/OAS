/*
 * This file is generated by jOOQ.
 */
package jooq.entities.tables.records;


import java.util.UUID;

import javax.annotation.Generated;

import jooq.entities.tables.Teacher;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeacherRecord extends UpdatableRecordImpl<TeacherRecord> implements Record7<UUID, String, Boolean, String, Boolean, Boolean, Long> {

    private static final long serialVersionUID = 1213443090;

    /**
     * Setter for <code>public.teacher.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.teacher.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.teacher.f_name</code>.
     */
    public void setFName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.teacher.f_name</code>.
     */
    public String getFName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.teacher.is_hod</code>.
     */
    public void setIsHod(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.teacher.is_hod</code>.
     */
    public Boolean getIsHod() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>public.teacher.l_name</code>.
     */
    public void setLName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.teacher.l_name</code>.
     */
    public String getLName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.teacher.unaccounted</code>.
     */
    public void setUnaccounted(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.teacher.unaccounted</code>.
     */
    public Boolean getUnaccounted() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.teacher.verified</code>.
     */
    public void setVerified(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.teacher.verified</code>.
     */
    public Boolean getVerified() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.teacher.class_fid</code>.
     */
    public void setClassFid(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.teacher.class_fid</code>.
     */
    public Long getClassFid() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<UUID, String, Boolean, String, Boolean, Boolean, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<UUID, String, Boolean, String, Boolean, Boolean, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return Teacher.TEACHER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Teacher.TEACHER.F_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field3() {
        return Teacher.TEACHER.IS_HOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Teacher.TEACHER.L_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Teacher.TEACHER.UNACCOUNTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return Teacher.TEACHER.VERIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return Teacher.TEACHER.CLASS_FID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getFName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component3() {
        return getIsHod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getLName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getUnaccounted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component6() {
        return getVerified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getClassFid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getFName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value3() {
        return getIsHod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getLName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getUnaccounted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getVerified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getClassFid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeacherRecord value1(UUID value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeacherRecord value2(String value) {
        setFName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeacherRecord value3(Boolean value) {
        setIsHod(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeacherRecord value4(String value) {
        setLName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeacherRecord value5(Boolean value) {
        setUnaccounted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeacherRecord value6(Boolean value) {
        setVerified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeacherRecord value7(Long value) {
        setClassFid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeacherRecord values(UUID value1, String value2, Boolean value3, String value4, Boolean value5, Boolean value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeacherRecord
     */
    public TeacherRecord() {
        super(Teacher.TEACHER);
    }

    /**
     * Create a detached, initialised TeacherRecord
     */
    public TeacherRecord(UUID id, String fName, Boolean isHod, String lName, Boolean unaccounted, Boolean verified, Long classFid) {
        super(Teacher.TEACHER);

        set(0, id);
        set(1, fName);
        set(2, isHod);
        set(3, lName);
        set(4, unaccounted);
        set(5, verified);
        set(6, classFid);
    }
}
