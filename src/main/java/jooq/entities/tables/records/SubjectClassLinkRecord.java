/*
 * This file is generated by jOOQ.
 */
package jooq.entities.tables.records;


import javax.annotation.Generated;

import jooq.entities.tables.SubjectClassLink;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubjectClassLinkRecord extends UpdatableRecordImpl<SubjectClassLinkRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = -58737203;

    /**
     * Setter for <code>public.subject_class_link.class_room_fid</code>.
     */
    public void setClassRoomFid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.subject_class_link.class_room_fid</code>.
     */
    public Long getClassRoomFid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.subject_class_link.subject_fid</code>.
     */
    public void setSubjectFid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.subject_class_link.subject_fid</code>.
     */
    public Long getSubjectFid() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return SubjectClassLink.SUBJECT_CLASS_LINK.CLASS_ROOM_FID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return SubjectClassLink.SUBJECT_CLASS_LINK.SUBJECT_FID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getClassRoomFid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getSubjectFid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getClassRoomFid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getSubjectFid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubjectClassLinkRecord value1(Long value) {
        setClassRoomFid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubjectClassLinkRecord value2(Long value) {
        setSubjectFid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubjectClassLinkRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubjectClassLinkRecord
     */
    public SubjectClassLinkRecord() {
        super(SubjectClassLink.SUBJECT_CLASS_LINK);
    }

    /**
     * Create a detached, initialised SubjectClassLinkRecord
     */
    public SubjectClassLinkRecord(Long classRoomFid, Long subjectFid) {
        super(SubjectClassLink.SUBJECT_CLASS_LINK);

        set(0, classRoomFid);
        set(1, subjectFid);
    }
}
